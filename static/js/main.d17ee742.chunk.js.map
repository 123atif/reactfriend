{"version":3,"sources":["Component/Card.js","Component/CardList.js","Component/SearchBox.js","Component/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","Component_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","console","log","state","inherits","createClass","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","Component_SearchBox","Component_Scroll","Component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"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","file":"static/js/main.d17ee742.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\r\n    return (\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5' >\r\n            <img alt = 'Robot' src={`https://robohash.org/${id}?200x200'`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        \r\n        <div>\r\n            {\r\n            robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n  })   \r\n}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return(\r\n      <div className='pa2'>\r\n        <input \r\n        className='pa3 ba b--black bg-light-gray tc'\r\n        type = 'Search' \r\n        placeholder='Search Robots' \r\n        onChange = { searchChange }\r\n        /> \r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n   return (\r\n      <div style={{overflowY: 'scroll', border: '5px solid black', height:'450px'}}>\r\n        {props.children }\r\n      </div>\r\n   )\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../Component/CardList';\r\nimport SearchBox from '../Component/SearchBox';\r\nimport Scroll from '../Component/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    } \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\nonSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n    console.log(event.target.value); \r\n}\r\nrender() {\r\n    const filteredRobots= this.state.robots.filter(robots => {\r\n        return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n    if (this.state.robots.length === 0) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n    else{\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox  searchChange = { this.onSearchChange }/>\r\n                <Scroll>\r\n                  <CardList robots = { filteredRobots } /> \r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}